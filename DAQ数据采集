import nidaqmx
from nidaqmx.constants import AcquisitionType, TerminalConfiguration
import matplotlib.pyplot as plt
import numpy as np

def daq_data_acquisition():
    """
    DAQ 数据采集函数
    配置并执行模拟输入数据采集任务
    """
    
    # 配置参数
    sample_rate = 1000  # 采样率 (Hz)
    duration = 5.0      # 采集时长 (秒)
    samples_per_channel = int(sample_rate * duration)
    physical_channel = "Dev1/ai0"  # 根据你的设备修改
    
    try:
        # 创建任务
        with nidaqmx.Task() as task:
            print("创建DAQ采集任务...")
            
            # 添加模拟输入通道 (电压测量)
            task.ai_channels.add_ai_voltage_chan(
                physical_channel,
                terminal_config=TerminalConfiguration.DIFF  # 差分输入
            )
            
            # 配置定时参数
            task.timing.cfg_samp_clk_timing(
                sample_rate,
                sample_mode=AcquisitionType.FINITE,
                samps_per_chan=samples_per_channel
            )
            
            print(f"开始采集数据，时长 {duration} 秒...")
            # 执行采集
            data = task.read(
                number_of_samples_per_channel=samples_per_channel,
                timeout=duration + 2.0  # 超时设置
            )
            
            print("数据采集完成！")
            
            # 转换为numpy数组
            data = np.array(data)
            
            # 生成时间轴
            t = np.linspace(0, duration, samples_per_channel)
            
            # 绘制采集到的数据
            plt.figure(figsize=(10, 4))
            plt.plot(t, data)
            plt.title("DAQ采集数据")
            plt.xlabel("时间 (s)")
            plt.ylabel("电压 (V)")
            plt.grid(True)
            plt.show()
            
            return t, data
            
    except nidaqmx.DaqError as e:
        print("DAQ错误:", e)
        return None, None
    except Exception as e:
        print("错误:", e)
        return None, None

if __name__ == "__main__":
    time, data = daq_data_acquisition()
    
    if data is not None:
        # 这里可以添加数据处理代码
        print(f"采集到 {len(data)} 个数据点")
